let
    Origine = Excel.Workbook(File.Contents("C:\Users\fedeb\OneDrive\Desktop\PowerBI\S9_L2\CONSEGNA S9_L2\M3S1E2.xlsx"), null, true),
    Ordini_Sheet = Origine{[Item="Ordini",Kind="Sheet"]}[Data],
    #"Intestazioni alzate di livello" = Table.PromoteHeaders(Ordini_Sheet, [PromoteAllScalars=true]),
    #"Modificato tipo" = Table.TransformColumnTypes(#"Intestazioni alzate di livello",{{"dqwdqw", type text}, {"Column2", type any}, {"Column3", type any}, {"Column4", type text}, {"Column5", type text}, {"Column6", type any}, {"Column7", type text}, {"Column8", type text}, {"Column9", type any}, {"Column10", type any}, {"Column11", type any}}),
    #"Rimosse colonne" = Table.RemoveColumns(#"Modificato tipo",{"Column2", "Column3"}),
    #"Rimossi errori" = Table.RemoveRowsWithErrors(#"Rimosse colonne"),
    #"Pulito testo" = Table.TransformColumns(#"Rimossi errori",{{"dqwdqw", Text.Clean, type text}}),
    #"Righe vuote rimosse" = Table.SelectRows(#"Pulito testo", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))),
    #"Testo troncato" = Table.TransformColumns(#"Righe vuote rimosse",{{"dqwdqw", Text.Trim, type text}}),
    #"Pulito testo1" = Table.TransformColumns(#"Testo troncato",{{"dqwdqw", Text.Clean, type text}}),
    #"Rimosse colonne1" = Table.RemoveColumns(#"Pulito testo1",{"Column9"}),
    #"Righe vuote rimosse1" = Table.SelectRows(#"Rimosse colonne1", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))),
    #"Rimossi errori1" = Table.RemoveRowsWithErrors(#"Righe vuote rimosse1", {"Column4"}),
    #"Rimossi errori2" = Table.RemoveRowsWithErrors(#"Rimossi errori1", {"Column5"}),
    #"Rimosse prime righe" = Table.Skip(#"Rimossi errori2",2),
    #"Intestazioni alzate di livello1" = Table.PromoteHeaders(#"Rimosse prime righe", [PromoteAllScalars=true]),
    #"Modificato tipo1" = Table.TransformColumnTypes(#"Intestazioni alzate di livello1",{{"COD PROD", type text}, {"Collaboratore", type text}, {"Regione", type text}, {"Column4", type date}, {"Categoria", type text}, {"Prodotto", type text}, {"Prezzo unitario", type number}, {"Quantità", Int64.Type}}),
    #"Testo troncato1" = Table.TransformColumns(#"Modificato tipo1",{{"Regione", Text.Trim, type text}, {"Categoria", Text.Trim, type text}}),
    #"Pulito testo2" = Table.TransformColumns(#"Testo troncato1",{{"Categoria", Text.Clean, type text}}),
    #"Testo troncato2" = Table.TransformColumns(#"Pulito testo2",{{"Prodotto", Text.Trim, type text}}),
    #"Pulito testo3" = Table.TransformColumns(#"Testo troncato2",{{"Prodotto", Text.Clean, type text}}),
    #"Modificato tipo2" = Table.TransformColumnTypes(#"Pulito testo3",{{"Prezzo unitario", Currency.Type}}),
    #"Rinominate colonne" = Table.RenameColumns(#"Modificato tipo2",{{"Column4", "Data"}}),
    #"Sostituito valore" = Table.ReplaceValue(#"Rinominate colonne",null,0,Replacer.ReplaceValue,{"Quantità"}),
    #"Aggiunta Colonna Trovato" = Table.AddColumn(#"Sostituito valore", "MAGGIORE DI 20", each if [Quantità] > 20 then "TROVATO" else "NON TROVATO"),
    #"Rimossi errori3" = Table.RemoveRowsWithErrors(#"Aggiunta Colonna Trovato", {"MAGGIORE DI 20"}),
    #"Rinominate colonne1" = Table.RenameColumns(#"Rimossi errori3",{{"Data", "Data Ordine"}}),
    #"Inserito Ricavo" = Table.AddColumn(#"Rinominate colonne1", "Moltiplicazione", each [Prezzo unitario] * [Quantità], Currency.Type),
    #"Ordinate righe" = Table.Sort(#"Inserito Ricavo",{{"Collaboratore", Order.Ascending}}),
    #"Pulito testo4" = Table.TransformColumns(#"Ordinate righe",{{"Collaboratore", Text.Clean, type text}}),
    #"Testo troncato3" = Table.TransformColumns(#"Pulito testo4",{{"Collaboratore", Text.Trim, type text}}),
    #"Caratteri iniziali inseriti" = Table.AddColumn(#"Testo troncato3", "Area", each Text.Start([Regione], 4), type text),
    #"Rinominate colonne2" = Table.RenameColumns(#"Caratteri iniziali inseriti",{{"Moltiplicazione", "Totale"}}),
    #"Inserita moltiplicazione1" = Table.AddColumn(#"Rinominate colonne2", "Moltiplicazione", each [Totale] * 0.22, Currency.Type),
    #"Rinominate colonne3" = Table.RenameColumns(#"Inserita moltiplicazione1",{{"Moltiplicazione", "IVA"}}),
    #"Inserita colonna combinata" = Table.AddColumn(#"Rinominate colonne3", "CATPROD", each Text.Combine({[Categoria], [Prodotto]}, " "), type text),
    #"Testo in maiuscolo" = Table.TransformColumns(#"Inserita colonna combinata",{{"Regione", Text.Upper, type text}}),
    #"Inserito mese" = Table.AddColumn(#"Testo in maiuscolo", "Mese", each Date.Month([Data Ordine]), Int64.Type),
    #"Colonna condizionale aggiunta" = Table.AddColumn(#"Inserito mese", "Mese dopo aprile", each if [Mese] > 4 then "sì" else "no"),
    #"Riordinate colonne" = Table.ReorderColumns(#"Colonna condizionale aggiunta",{"COD PROD", "Collaboratore", "Regione", "Data Ordine", "Mese", "Mese dopo aprile", "Categoria", "Prodotto", "Prezzo unitario", "Quantità", "MAGGIORE DI 20", "Totale", "Area", "IVA", "CATPROD"}),
    #"Ordinate righe1" = Table.Sort(#"Riordinate colonne",{{"Collaboratore", Order.Ascending}}),
    #"Suddividi colonna in base alla posizione" = Table.SplitColumn(#"Ordinate righe1", "COD PROD", Splitter.SplitTextByPositions({0, 2}, false), {"COD PROD.1", "COD PROD.2"}),
    #"Modificato tipo3" = Table.TransformColumnTypes(#"Suddividi colonna in base alla posizione",{{"COD PROD.1", type text}, {"COD PROD.2", Int64.Type}}),
    #"Sostituito valore1" = Table.ReplaceValue(#"Modificato tipo3","Pium","Piuma",Replacer.ReplaceText,{"Prodotto"}),
    #"Testo in maiuscolo1" = Table.TransformColumns(#"Sostituito valore1",{{"Collaboratore", Text.Upper, type text}}),
    #"Ordinate righe2" = Table.Sort(#"Testo in maiuscolo1",{{"Collaboratore", Order.Ascending}}),
    #"Colonna condizionale aggiunta1" = Table.AddColumn(#"Ordinate righe2", "Valori 1_2", each if [Categoria] = "Moto" then 1 else if [Categoria] = "Auto" then 2 else null, type number)
in
    #"Colonna condizionale aggiunta1"